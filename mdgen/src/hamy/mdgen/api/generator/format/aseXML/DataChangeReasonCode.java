//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.18 at 10:36:34 AM AEDT 
//


package hamy.mdgen.api.generator.format.aseXML;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DataChangeReasonCode.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DataChangeReasonCode">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;maxLength value="6"/>
 *     &lt;enumeration value="DCR001"/>
 *     &lt;enumeration value="DCR002"/>
 *     &lt;enumeration value="DCR003"/>
 *     &lt;enumeration value="DCR004"/>
 *     &lt;enumeration value="DCR005"/>
 *     &lt;enumeration value="DCR006"/>
 *     &lt;enumeration value="DCR007"/>
 *     &lt;enumeration value="DCR008"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DataChangeReasonCode")
@XmlEnum
public enum DataChangeReasonCode {

    @XmlEnumValue("DCR001")
    DCR_001("DCR001"),
    @XmlEnumValue("DCR002")
    DCR_002("DCR002"),
    @XmlEnumValue("DCR003")
    DCR_003("DCR003"),
    @XmlEnumValue("DCR004")
    DCR_004("DCR004"),
    @XmlEnumValue("DCR005")
    DCR_005("DCR005"),
    @XmlEnumValue("DCR006")
    DCR_006("DCR006"),
    @XmlEnumValue("DCR007")
    DCR_007("DCR007"),
    @XmlEnumValue("DCR008")
    DCR_008("DCR008");
    private final String value;

    DataChangeReasonCode(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DataChangeReasonCode fromValue(String v) {
        for (DataChangeReasonCode c: DataChangeReasonCode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
