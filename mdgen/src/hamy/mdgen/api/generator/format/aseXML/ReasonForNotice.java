//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.18 at 10:36:34 AM AEDT 
//


package hamy.mdgen.api.generator.format.aseXML;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ReasonForNotice.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ReasonForNotice">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;maxLength value="50"/>
 *     &lt;enumeration value="Meter Family Failure"/>
 *     &lt;enumeration value="Accuracy Failure"/>
 *     &lt;enumeration value="Timeswitch/Controlled Load Failure"/>
 *     &lt;enumeration value="Contactor Failure"/>
 *     &lt;enumeration value="No Display"/>
 *     &lt;enumeration value="Communication Failure"/>
 *     &lt;enumeration value="Meter Verification"/>
 *     &lt;enumeration value="Malfunction"/>
 *     &lt;enumeration value="Area Event"/>
 *     &lt;enumeration value="Metrology Threshold Breach"/>
 *     &lt;enumeration value="Meter Bypassed"/>
 *     &lt;enumeration value="Physical Damage"/>
 *     &lt;enumeration value="Theft/Tampering"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ReasonForNotice")
@XmlEnum
public enum ReasonForNotice {

    @XmlEnumValue("Meter Family Failure")
    METER_FAMILY_FAILURE("Meter Family Failure"),
    @XmlEnumValue("Accuracy Failure")
    ACCURACY_FAILURE("Accuracy Failure"),
    @XmlEnumValue("Timeswitch/Controlled Load Failure")
    TIMESWITCH_CONTROLLED_LOAD_FAILURE("Timeswitch/Controlled Load Failure"),
    @XmlEnumValue("Contactor Failure")
    CONTACTOR_FAILURE("Contactor Failure"),
    @XmlEnumValue("No Display")
    NO_DISPLAY("No Display"),
    @XmlEnumValue("Communication Failure")
    COMMUNICATION_FAILURE("Communication Failure"),
    @XmlEnumValue("Meter Verification")
    METER_VERIFICATION("Meter Verification"),
    @XmlEnumValue("Malfunction")
    MALFUNCTION("Malfunction"),
    @XmlEnumValue("Area Event")
    AREA_EVENT("Area Event"),
    @XmlEnumValue("Metrology Threshold Breach")
    METROLOGY_THRESHOLD_BREACH("Metrology Threshold Breach"),
    @XmlEnumValue("Meter Bypassed")
    METER_BYPASSED("Meter Bypassed"),
    @XmlEnumValue("Physical Damage")
    PHYSICAL_DAMAGE("Physical Damage"),
    @XmlEnumValue("Theft/Tampering")
    THEFT_TAMPERING("Theft/Tampering"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    ReasonForNotice(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ReasonForNotice fromValue(String v) {
        for (ReasonForNotice c: ReasonForNotice.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
