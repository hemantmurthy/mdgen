//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.18 at 10:36:34 AM AEDT 
//


package hamy.mdgen.api.generator.format.aseXML;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for GasSearchTransactionType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="GasSearchTransactionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Bid"/>
 *     &lt;enumeration value="Forecast"/>
 *     &lt;enumeration value="InjectionNomination"/>
 *     &lt;enumeration value="AgencyNomination"/>
 *     &lt;enumeration value="AgencyConfirmation"/>
 *     &lt;enumeration value="AmdqNomination"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "GasSearchTransactionType")
@XmlEnum
public enum GasSearchTransactionType {

    @XmlEnumValue("Bid")
    BID("Bid"),
    @XmlEnumValue("Forecast")
    FORECAST("Forecast"),
    @XmlEnumValue("InjectionNomination")
    INJECTION_NOMINATION("InjectionNomination"),
    @XmlEnumValue("AgencyNomination")
    AGENCY_NOMINATION("AgencyNomination"),
    @XmlEnumValue("AgencyConfirmation")
    AGENCY_CONFIRMATION("AgencyConfirmation"),
    @XmlEnumValue("AmdqNomination")
    AMDQ_NOMINATION("AmdqNomination");
    private final String value;

    GasSearchTransactionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static GasSearchTransactionType fromValue(String v) {
        for (GasSearchTransactionType c: GasSearchTransactionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
