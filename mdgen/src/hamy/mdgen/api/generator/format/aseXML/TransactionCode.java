//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.18 at 10:36:34 AM AEDT 
//


package hamy.mdgen.api.generator.format.aseXML;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TransactionCode.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TransactionCode">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Add Meter or Register"/>
 *     &lt;enumeration value="Customer Transfer"/>
 *     &lt;enumeration value="Technical Data Change"/>
 *     &lt;enumeration value="Remove Meter"/>
 *     &lt;enumeration value="Special Read"/>
 *     &lt;enumeration value="On Request"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TransactionCode")
@XmlEnum
public enum TransactionCode {

    @XmlEnumValue("Add Meter or Register")
    ADD_METER_OR_REGISTER("Add Meter or Register"),
    @XmlEnumValue("Customer Transfer")
    CUSTOMER_TRANSFER("Customer Transfer"),
    @XmlEnumValue("Technical Data Change")
    TECHNICAL_DATA_CHANGE("Technical Data Change"),
    @XmlEnumValue("Remove Meter")
    REMOVE_METER("Remove Meter"),
    @XmlEnumValue("Special Read")
    SPECIAL_READ("Special Read"),
    @XmlEnumValue("On Request")
    ON_REQUEST("On Request");
    private final String value;

    TransactionCode(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TransactionCode fromValue(String v) {
        for (TransactionCode c: TransactionCode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
