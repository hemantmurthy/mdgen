//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.18 at 10:36:34 AM AEDT 
//


package hamy.mdgen.api.generator.format.aseXML;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for NotificationStatus.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="NotificationStatus">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;maxLength value="30"/>
 *     &lt;enumeration value="SO Requested"/>
 *     &lt;enumeration value="SO Rejected"/>
 *     &lt;enumeration value="SO Completion"/>
 *     &lt;enumeration value="Accepted by Notified Party"/>
 *     &lt;enumeration value="Rejection by Notified Party"/>
 *     &lt;enumeration value="Notified Party Stopped"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "NotificationStatus")
@XmlEnum
public enum NotificationStatus {

    @XmlEnumValue("SO Requested")
    SO_REQUESTED("SO Requested"),
    @XmlEnumValue("SO Rejected")
    SO_REJECTED("SO Rejected"),
    @XmlEnumValue("SO Completion")
    SO_COMPLETION("SO Completion"),
    @XmlEnumValue("Accepted by Notified Party")
    ACCEPTED_BY_NOTIFIED_PARTY("Accepted by Notified Party"),
    @XmlEnumValue("Rejection by Notified Party")
    REJECTION_BY_NOTIFIED_PARTY("Rejection by Notified Party"),
    @XmlEnumValue("Notified Party Stopped")
    NOTIFIED_PARTY_STOPPED("Notified Party Stopped");
    private final String value;

    NotificationStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static NotificationStatus fromValue(String v) {
        for (NotificationStatus c: NotificationStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
